---
- name: '[render] {{ module_task_name }} Debug provision vars'
  debug: var='{{ item }}'
  with_items: [component_dir, resource_dir, provision]
  tags: debug

- name: '[render] {{ module_task_name }} Ensure the resource directory tree exists'
  file:
    path: '{{ resource_dir }}'
    state: directory
  with_items: ['directory'] # ['absent', 'directory']

# main.tf.j2 is from the actual resource itself
- name: '[render] {{ resource_task_name }} Template the Resource'
  template:
    src: main.tf.j2
    dest: '{{ resource_dir }}/main.tf'

- name: '[render] {{ resource_task_name }} Template the Resource Signature'
  template:
    src: resource-signature.tf.j2
    dest: '{{ resource_dir }}/signature.tf'

- name: '[render] {{ module_task_name }} Template the module'
  template:
    src: module.tf.j2
    dest: '{{ component_dir }}/{{ this.class.meta.ns }}-{{ this.class.meta.name }}.tf'

- name: '[render] {{ module_task_name }} Add variables to .tfvars'
  blockinfile:
    create: no
    dest: '{{ tfvars_file }}'
    marker: '# {mark} {{ this.class.meta.name }}'
    block: |
      {% set root_name = this.class.meta.ns + '-' + this.class.meta.name %}
      {% set root_name_underscore = (root_name | replace('-', '_')) %}
      {% if external_tfvars is not defined %}{% set external_tfvars = {} %}{% endif %}
      {% for key, value in (variables | combine(external_vars)).iteritems() %}
      {% if key not in external_tfvars %}
      {% set write_key = root_name_underscore + '_' + key %}
      {% set write_key = write_key + ' ' * (60 - (write_key | length)) %}
      {% set write_value = (provision.tfvars[key] | default(value.default)) %}
      {% if value.type is defined %}
      {{ write_key }} = { {% for xkey, xvalue in write_value.iteritems() %}{{ xkey }} = "{{ xvalue }}" {% endfor %}}
      {% else %}
      {{ write_key }} = "{{ write_value }}"
      {% endif %}
      {% endif %}
      {% endfor %}
  when: (variables | length) > 0
