# '{{ module_meta.ns }}-{{ module_meta.name }}' component {{ ansible_managed }}
{% set root_name = module_meta.ns + '-' + module_meta.name %}
{% set root_name_underscore = (root_name | replace('-', '_')) %}
{% set pad_length = 40 %}
{% if env_vars is not defined %}{% set env_vars = {} %}{% endif %}

{% for nvars in [variables, env_vars] %}
{% for key, value in nvars.iteritems() %}
variable "{{ root_name_underscore }}_{{ key }}" {}
{% endfor %}
{% endfor %}


module "{{ root_name }}" {
  source {{ ' ' * (pad_length - 7) }} = "{{ resource_path }}"

{% for nvars in [variables, env_vars] %}
{% for key, value in nvars.iteritems() %}
  {{ key }}{{ ' ' * (pad_length - (key | length)) }} = "${var.{{ root_name_underscore }}_{{ key }}}"
{% endfor %}
{% endfor %}

{% for key, value in external_vars.iteritems() %}
  {%- set key_pad = '  ' + key + (' ' * (pad_length - (key | length))) %}
  {%- if module_vars is defined and key in module_vars %}
    {%- set reference = module_vars[key] %}
{{ key_pad }} = "${module.{{ reference.provider }}.{{ reference.name | default(key) }}}"
  {%- elif remote_vars is defined and key in remote_vars %}
    {%- set reference = remote_vars[key] %}
    {%- if reference.provider in provision.remote_states %}
{{ key_pad }} = "${data.terraform_remote_state.{{ reference.provider }}.{{ reference.name | default(key) }}}"
    {%- else %}
# WARN: remote value {{ key }} found in remote_states but not in provision.remote_states!
    {%- endif %}
  {%- else %}
# WARN: remote value {{ key }} not found in modules or remote_states!
  {%- endif %}
{#
{% if value.reference is iterable and value.reference is not string %}
  {{ key_pad }} = [{% for xvalue in value.reference %}"{{ reference }}.{{ xvalue }}}",{% endfor %}]
{% elif value.reference.split('.') | length == 1 %}
  {{ key_pad }} = "{{ reference }}.{{ value.reference }}.{{ key }}}"
{% else %}
  {{ key_pad }} = "{{ reference }}.{{ value.reference }}}"
{% endif %}
#}

{% endfor %}
}
{% for key, value in output_vars.iteritems() %}

output "{{ root_name_underscore }}_{{ key }}" {
  description = "{{ value.description }}"
  value       = "${module.{{ root_name }}.{{ key }}}"
}
{% endfor %}
